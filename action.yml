name: install node modules

inputs:
  root:      { required: false, type: string, default: . }
  cache:     { required: false, type: string, default: yes }
  cache-gen: { required: false, type: string, default: v1 }

outputs:
  cache-hit:
    value: ${{ steps.cache.outputs.cache-hit }}

runs:
  using: composite
  steps:

    - id: info
      shell: bash
      run: |
        case "${{ inputs.cache }}" in
          yes|workflow) cache="${{ inputs.cache }}" ;;
          *) cache= ;;
        esac
        gen="${{ inputs.cache-gen }}"
        node -v
        env_hash="$( (uname -mrsv; node -v) | md5sum | awk '{print $1}' )"
        file_hash="${{ hashFiles(format('{0}/**/package-lock.json', inputs.root)) }}"
        hash="$file_hash-$gen-$env_hash"
        [ "$cache" == 'workflow' ] && hash="$hash-${{ github.run_id }}"
        cat << END
        ::set-output name=cache::$cache
        ::set-output name=hash::$hash
        END

    - id: cache
      if: steps.info.outputs.cache != ''
      uses: actions/cache@v2
      with:
        path: ${{ inputs.root }}/*/node_modules
        key: ${{ steps.info.outputs.hash }}

    - name: configure node modules
      shell: bash
      run: |
        root="${{ inputs.root }}"
        for lock in $(find $root -name package-lock.json)
        do
          dir=$(dirname $lock)
          if [ -d $dir/node_modules ]
          then
            echo "skip $dir"
          else
            echo "configure $dir"
            (cd $dir && npm install)
          fi
        done
